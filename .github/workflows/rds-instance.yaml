# Define the name of the GitHub Action workflow
name: Create an RDS instance
# This workflow is manually triggered using the GitHub Actions UI
on:
  workflow_dispatch:
    # Define inputs that are required for the manual trigger
    inputs:
      instanceName:
        description: 'Name of the RDS Instance' # What's this input for?
        required: true # Is it optional or required?
      awsRegion:
        description: 'AWS Region for the RDS Instance'
        required: true
      instanceType:
        description: 'AWS instance type'
        required: true
      instanceStorage:
        description: 'Storage size'
        required: true
      instanceUsername:
        description: 'Username needed for loggin into database'
        required: true
      instancePassword:
        description: 'Password needed for loggin into database'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true

defaults:
  run:
    working-directory: aws-rds-pulumi
# Jobs to be executed in this workflow
jobs:
  # Job for applying the ec2 instance
  apply_ec2:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Execute this step only if the action input is "apply"
    if: ${{ github.event.inputs.action == 'apply' }}
    # Define the steps for this job
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ github.event.inputs.awsRegion }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: pip install -r requirements.txt
      - uses: pulumi/actions@v6
        with:
          command: up
          stack-name: test
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          INSTANCE_TYPE: ${{ github.event.inputs.instanceType }}
          INSTANCE_NAME: ${{ github.event.inputs.instanceName}}
          INSTANCE_STORAGE: ${{ github.event.inputs.instanceStorage }}
          INSTANCE_USERNAME: ${{  github.event.inputs.instanceUsername }}
          INSTANCE_PASSWORD: ${{  github.event.inputs.instancePassword }}
          INSTANCE_ENGINE: ${{ github.event.inputs.instanceEngine }}

  #          github.event.inputs.instanceName }} -var awsRegion=${{ github.event.inputs.awsRegion }} -var instanceType=${{ github.event.inputs.instanceType }} -auto-approve

  # Destroying the  ec2 instance
  destroy_instance:
    runs-on: ubuntu-latest

    # Execute this job only if the action input is "destroy"
    if: ${{ github.event.inputs.action == 'destroy' }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ github.event.inputs.awsRegion }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: pip install -r requirements.txt
      - uses: pulumi/actions@v6
        with:
          command: destroy
          stack-name: dev # When using an individual account, only use stack-name.
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
#          github.event.inputs.instanceName }} -var awsRegion=${{ github.event.inputs.awsRegion }} -var instanceType=${{ github.event.inputs.instanceType }} -auto-approve

